
https://www.php.net/docs.php

PHP Reference
## 용어 모음
* 프로퍼티 : 클래스 안의 변수(객체의 속성)
* 메서드 : 클래스 안의 함수(객체의 행동)
* 심볼릭 상수 : define이나 const를 이용해 정의한 "명칭형" 상수
* information hiding : 객체 속성을 은닉(private)
* 접근지시자 : public, private

## PHP의 대표적인 내장 함수들
round($avg, 2); 소수점 끊어서 리턴
count($subj); 배열의 개수 리턴
max($score); 배열 중 가장 큰 값 리턴
date("Y-m-d"); 년-월-일 문자열 리턴
date("H:i:s"); 시:분:초 문자열 리턴
foreach ($_REQUEST["lang"] as $val) {
  // 배열의 모든 요소를 $val에 순차적으로 넣고 반복
  echo $val; //_REQUEST["lang"][] 배열의 값을 val에 넣어서 모두 출력
}
isset($phone[$search]); 변수가 존재하는지 확인
number_format($num) 소수점을 반올림하고 천단위로, 포맷

## 클래스 만들기
class Person{
  public $name;
  private $id;
  public function __construct() {...}
  public function printInfo() { echo "$this->name ..."; }
}
* 클래스 생성은 선언에서 () 안붙임
* 클래스의 생성자는 __construct( 매개변수 ) { 코드 }
* 생성자는 인스턴스를 생성할 때 실행되는 메서드
* 프로퍼티 선언은 앞에 접근지시자, 그 다음에 프로퍼티명
* 메서드 선언은 맨앞에 $ 안붙임
* $this->name; 객체 내부에서 객체 변수를 사용할 때 this 사용

## 객체 인스턴스 만들기
$p1 = new Person();  변수명 = 클래스명(매개변수); 생성자 실행 후 완성된 객체의 주소값을 $p1에 저장
* 모든 객체는 주소값임
* 객체의 형태는 동일하지만 내부 값은 모두 다를 수 있음.

## 객체 인스턴스 사용
$p1->name = "abc"; p1 Person 클래스의 name을 "abc" 로 변경
echo $p1->name; p1 Person 클래스의 name을 출력
$p1->printInfo(); p1 Person 클래스의 printInfo 메서드 실행
* 객체의 변수명에 $안붙임
* 멤버연산자(.)가 아니라 (->) 이다.

## 전역 상수
define("PI", 3.14); PI라는 이름의 3.14 상수 생성
* 대문자만 사용
* 클래스 내부에서 쓰면 안 됨
* 상수를 쓰면 명료성 있고 유지보수가 편해짐

## 클래스 상수
class Desk {
  const RED = "FF0000"; const 키워드를 쓴 건 변수가 아닌 상수(변하지 않는 수)
  public color;
}
$d->color = Desk::RED; 클래스명::클래스상수명
* 클래스마다 상수가 같은 명칭이지만 값이 다를 수 있음
* ::가 꼭 필요
