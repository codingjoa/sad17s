
SQL : Structured Query Language, DBMS에게 명령을 내리고 데이터베이스를 위한 언어
MySQL 기본 명령어

- 데이터베이스 접속
mysql -h 192.168.0.300 -u username -p dbname

- 테이블의 생성 및 삭제
create table <테이블 이름> (<키 이름> <키 자료형> [속성], ..., key_name varchar(10) not null);
drop <테이블 이름>   테이블 삭제
drop <테이블 이름> if exist `테이블 이름`;   -> 테이블 이름이 있으면 테이블 삭제

- 테이블 보기
use db;   특정 db에 연결
show databases;   db 목록 보기
show table;   db 안의 테이블 보기
desc department;    특정 테이블의 스키마 보기
select * from department;   특정 테이블의 데이터 보기

- 데이터의 생성 및 수정
insert info <테이블 이름> values(30, ..., '첫 키');
update <테이블 이름> set <수정내역> where <조건>;
ex: set key_name='새 키', set key_id= key_id + 1
ex: set key_name='새 키' where key_name='첫 키' (키 이름이 첫 키이면 새 키로 변경)
delete from <테이블 이름> where <조건>;

- 데이터 자료형
문자형 : char(n) 문자 고정길이, varchar(n) 가변 최대 길이
숫자형 : int 정수, float 소수
시간형 : date, time, timestamp



2. MySQL

select (필드 이름) from (테이블 이름)
select (필드 이름) from (테이블 이름) where (조건)

60-age
distinct : 중복 제외 출력

order by (필드 이름) : 특정 필드의 순서로 정렬 (where이 있는 경우 where의 뒤에서 사용한다)
order by desc : 역순 정렬
order by age : age필드가 높은 순서로 정렬
order by age desc : age필드가 낮은 순서로 정렬

like -> 비슷한 것 찾기
like '김%' : 레코드에서 김으로 시작하는 모든 레코드 찾기 (김밥(O), 신김치(X))
like '%김%' : 레코드에 김이 하나라도 들어가는 레코드 찾기 (김XX, X김X, XX김 모두 포함)
like '김_수' : 김X수 찾기 (성이 김씨고, 이름의 마지막이 수인 모든 사람 찾기)
like '김___' : 문자열 김 뒤에 3글자가 정확히 있는 레코드 찾기 (김수한무(O), 김밥천국(O), 김지수(X))

집계함수 (select에서 사용)
count(*) : 개수
sum(필드) : 더하기
avg(필드) : 나누기
max(필드) : 최대값 출력
min(필드) : 최소값 출력
ex : select sum(balance) from deposit : deposit의 balance 필드 값들을 모두 더함
